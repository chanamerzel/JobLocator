{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chani\\\\Desktop\\\\\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\MegaFlex2 - Copy\\\\client-side\\\\apartments\\\\src\\\\components\\\\Drop_Down.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { Link, Outlet } from \"react-router-dom\";\nimport '../App.css';\nimport ReactDOM from \"react-dom/client\";\nimport sortJobsDetailsByAreaOrCity from './logic/sort';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Drop_Down(props) {\n  _s();\n\n  const [dropDownArray, setDropDownArray] = useState([]);\n  const [dropDownType, setDropDownType] = useState(\"\");\n\n  function dropDownOnchange(value, dropDownType) {\n    console.log(\"hyy\");\n    let key = [\"store_region\", \"city\"];\n    let index = 0;\n    let sortedArray = [];\n\n    switch (dropDownType) {\n      case \"area\":\n        sortedArray = sortJobsDetailsByAreaOrCity(value, key[0], props.jobsDetails);\n        index = 0;\n        break;\n\n      case \"city\":\n        sortedArray = sortJobsDetailsByAreaOrCity(value, key[1], props.jobsDetails);\n        index = 1;\n        break;\n\n      default:\n        break;\n    }\n\n    console.log(\"sortedArray\" + sortedArray.toString());\n    props.onChangeFunction(sortedArray);\n    sessionStorage.setItem(\"currentTable\", JSON.stringify({\n      response: sortedArray.flat()\n    }));\n    props.setFunc(key[index], props.jobsDetails);\n    setDropDownArray(sortedArray);\n  }\n\n  const defineDropDown = async () => {\n    setDropDownArray(await props.dropDownArray);\n    setDropDownType(await props.dropDownType);\n  };\n\n  useEffect(() => {\n    defineDropDown();\n  }, [props.dropDownArray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"form1\",\n      id: \"form1\",\n      action: \"/action_page.php\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"subject\",\n        id: \"subject\",\n        children: [dropDownArray.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)), console.log(props.dropDownArray)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Drop_Down, \"cJ7xyJ7xNNML1dSpmFtV+gtiLH8=\");\n\n_c = Drop_Down;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drop_Down\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Link","Outlet","ReactDOM","sortJobsDetailsByAreaOrCity","Drop_Down","props","dropDownArray","setDropDownArray","dropDownType","setDropDownType","dropDownOnchange","value","console","log","key","index","sortedArray","jobsDetails","toString","onChangeFunction","sessionStorage","setItem","JSON","stringify","response","flat","setFunc","defineDropDown","map","option"],"sources":["C:/Users/Chani/Desktop/עבודה/MegaFlex2 - Copy/client-side/apartments/src/components/Drop_Down.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link, Outlet } from \"react-router-dom\";\r\nimport '../App.css';\r\nimport ReactDOM from \"react-dom/client\";\r\nimport sortJobsDetailsByAreaOrCity from './logic/sort'\r\nexport default function Drop_Down(props) {\r\n    const [dropDownArray, setDropDownArray] = useState([])\r\n    const [dropDownType, setDropDownType] = useState(\"\")\r\n    function dropDownOnchange(value, dropDownType) {\r\n        console.log(\"hyy\")\r\n        let key = [\"store_region\", \"city\"]\r\n        let index = 0;\r\n        let sortedArray = []\r\n        switch (dropDownType) {\r\n            case \"area\":\r\n                sortedArray = sortJobsDetailsByAreaOrCity(value, key[0], props.jobsDetails);\r\n                index = 0;\r\n\r\n                break;\r\n            case \"city\":\r\n                sortedArray = sortJobsDetailsByAreaOrCity(value, key[1], props.jobsDetails);\r\n                index = 1;\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        console.log(\"sortedArray\" + sortedArray.toString())\r\n        props.onChangeFunction(sortedArray)\r\n        sessionStorage.setItem(\"currentTable\", JSON.stringify({response:sortedArray.flat()}))\r\n        props.setFunc(key[index], props.jobsDetails)\r\n        setDropDownArray(sortedArray)\r\n    }\r\n    const defineDropDown = async () => {\r\n        setDropDownArray(await props.dropDownArray);\r\n        setDropDownType(await props.dropDownType)\r\n    };\r\n    useEffect(() => {\r\n\r\n        defineDropDown();\r\n    }, [props.dropDownArray]);\r\n    return (\r\n        <div>\r\n            <form name=\"form1\" id=\"form1\" action=\"/action_page.php\">\r\n\r\n                <select name=\"subject\" id=\"subject\">\r\n                    {\r\n                        \r\n                        dropDownArray.map((option) => (\r\n                            <option key={option} value={option}>{option}</option>\r\n                            \r\n                        ))\r\n\r\n                    }\r\n                    {console.log(props.dropDownArray)}\r\n                </select>\r\n            </form>\r\n        </div>);\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,kBAA7B;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,2BAAP,MAAwC,cAAxC;;AACA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAAA;;EACrC,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;;EACA,SAASc,gBAAT,CAA0BC,KAA1B,EAAiCH,YAAjC,EAA+C;IAC3CI,OAAO,CAACC,GAAR,CAAY,KAAZ;IACA,IAAIC,GAAG,GAAG,CAAC,cAAD,EAAiB,MAAjB,CAAV;IACA,IAAIC,KAAK,GAAG,CAAZ;IACA,IAAIC,WAAW,GAAG,EAAlB;;IACA,QAAQR,YAAR;MACI,KAAK,MAAL;QACIQ,WAAW,GAAGb,2BAA2B,CAACQ,KAAD,EAAQG,GAAG,CAAC,CAAD,CAAX,EAAgBT,KAAK,CAACY,WAAtB,CAAzC;QACAF,KAAK,GAAG,CAAR;QAEA;;MACJ,KAAK,MAAL;QACIC,WAAW,GAAGb,2BAA2B,CAACQ,KAAD,EAAQG,GAAG,CAAC,CAAD,CAAX,EAAgBT,KAAK,CAACY,WAAtB,CAAzC;QACAF,KAAK,GAAG,CAAR;QACA;;MAEJ;QACI;IAZR;;IAcAH,OAAO,CAACC,GAAR,CAAY,gBAAgBG,WAAW,CAACE,QAAZ,EAA5B;IACAb,KAAK,CAACc,gBAAN,CAAuBH,WAAvB;IACAI,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuCC,IAAI,CAACC,SAAL,CAAe;MAACC,QAAQ,EAACR,WAAW,CAACS,IAAZ;IAAV,CAAf,CAAvC;IACApB,KAAK,CAACqB,OAAN,CAAcZ,GAAG,CAACC,KAAD,CAAjB,EAA0BV,KAAK,CAACY,WAAhC;IACAV,gBAAgB,CAACS,WAAD,CAAhB;EACH;;EACD,MAAMW,cAAc,GAAG,YAAY;IAC/BpB,gBAAgB,CAAC,MAAMF,KAAK,CAACC,aAAb,CAAhB;IACAG,eAAe,CAAC,MAAMJ,KAAK,CAACG,YAAb,CAAf;EACH,CAHD;;EAIAX,SAAS,CAAC,MAAM;IAEZ8B,cAAc;EACjB,CAHQ,EAGN,CAACtB,KAAK,CAACC,aAAP,CAHM,CAAT;EAIA,oBACI;IAAA,uBACI;MAAM,IAAI,EAAC,OAAX;MAAmB,EAAE,EAAC,OAAtB;MAA8B,MAAM,EAAC,kBAArC;MAAA,uBAEI;QAAQ,IAAI,EAAC,SAAb;QAAuB,EAAE,EAAC,SAA1B;QAAA,WAGQA,aAAa,CAACsB,GAAd,CAAmBC,MAAD,iBACd;UAAqB,KAAK,EAAEA,MAA5B;UAAA,UAAqCA;QAArC,GAAaA,MAAb;UAAA;UAAA;UAAA;QAAA,QADJ,CAHR,EASKjB,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACC,aAAlB,CATL;MAAA;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;GArDuBF,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}