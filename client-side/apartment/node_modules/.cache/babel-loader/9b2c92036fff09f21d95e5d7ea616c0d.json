{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chani\\\\Desktop\\\\\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\MegaFlex2\\\\client-side\\\\apartments\\\\src\\\\components\\\\Main_Component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Routes, Route, Link, Outlet } from 'react-router-dom';\nimport Table from \"./Table\";\nimport Drop_Down from \"./Drop_Down\";\nimport sortJobsDetailsByAreaOrCity from './logic/sort';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main_Component(props) {\n  _s();\n\n  const [searchSort, setSearchSort] = useState([]);\n  const [citySort, setCitySort] = useState([]);\n  const [areaSort, setAreaSort] = useState([]);\n  const [apiSort, setApiSort] = useState(props.apiSort);\n  const [jobsDetails, setJobsDetails] = useState([]);\n  const [areas, setAreas] = useState([]);\n  const [cities, setCities] = useState([]); // function sortJobsDetailsByAreaOrCity(area,key) {\n  //     const set = new Set();\n  //     for (let job of jobsDetails) {\n  //         if (job[key] === area) {\n  //             set.add(job);\n  //         }\n  //     }\n  //     setJobsDetails([...set]);\n  //     // window.location.reload()\n  // }\n  // const saveDropDownValues = useCallback((value, type) => {\n  //     // alert(\"value: \" + value + \" type\" + type);\n  //     console.log(\"hyy\")\n  //     let sortedArray = []\n  //     switch (type) {\n  //         case \"area\":\n  //             sortedArray = sortJobsDetailsByAreaOrCity(value, \"store_region\", jobsDetails);\n  //             setCities(getArrayByKey(\"city\"))//Get arrays of cities.\n  //             break;\n  //         case \"city\":\n  //             sortedArray = sortJobsDetailsByAreaOrCity(value, \"city\", jobsDetails);\n  //             setCities(getArrayByKey(\"city\"))//Get arrays of cities.\n  //             break;\n  //         default:\n  //             break;\n  //     }\n  //     setJobsDetails(sortedArray)\n  //     console.log(\"sortedArray\"+sortedArray.toString())\n  // }, []);\n\n  function getArrayByKey(key) {\n    //Get array of certain key.\n    const set = new Set();\n\n    for (let job of jobsDetails) {\n      set.add(job[key]);\n    }\n\n    return [...set];\n  }\n\n  useEffect(() => {\n    // apiCall();//Get all data from api.\n    // setApiSort(props.apiSort)\n    setJobsDetails(props.apiSort);\n    setAreas(getArrayByKey(\"store_region\")); //Get array of areas.\n\n    setCities(getArrayByKey(\"city\")); //Get arrays of cities.\n  }, [jobsDetails, props.apiSort]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h1\",\n        children: \"JobLocator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      areas: areas,\n      cities: cities,\n      jobsDetails: jobsDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Main_Component, \"x2E2HyFELKpUF5auvty/XPVLKBE=\");\n\n_c = Main_Component;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main_Component\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","useLocation","Routes","Route","Link","Outlet","Table","Drop_Down","sortJobsDetailsByAreaOrCity","Main_Component","props","searchSort","setSearchSort","citySort","setCitySort","areaSort","setAreaSort","apiSort","setApiSort","jobsDetails","setJobsDetails","areas","setAreas","cities","setCities","getArrayByKey","key","set","Set","job","add"],"sources":["C:/Users/Chani/Desktop/עבודה/MegaFlex2/client-side/apartments/src/components/Main_Component.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Routes, Route, Link, Outlet } from 'react-router-dom';\r\nimport Table from \"./Table\";\r\nimport Drop_Down from \"./Drop_Down\";\r\nimport sortJobsDetailsByAreaOrCity from './logic/sort'\r\nexport default function Main_Component(props) {\r\n    const [searchSort, setSearchSort] = useState([])\r\n    const [citySort, setCitySort] = useState([])\r\n    const [areaSort, setAreaSort] = useState([])\r\n    const [apiSort, setApiSort] = useState(props.apiSort)\r\n\r\n    const [jobsDetails, setJobsDetails] = useState([])\r\n    const [areas, setAreas] = useState([])\r\n    const [cities, setCities] = useState([])\r\n    // function sortJobsDetailsByAreaOrCity(area,key) {\r\n    //     const set = new Set();\r\n    //     for (let job of jobsDetails) {\r\n    //         if (job[key] === area) {\r\n    //             set.add(job);\r\n    //         }\r\n    //     }\r\n    //     setJobsDetails([...set]);\r\n    //     // window.location.reload()\r\n    // }\r\n\r\n    // const saveDropDownValues = useCallback((value, type) => {\r\n    //     // alert(\"value: \" + value + \" type\" + type);\r\n    //     console.log(\"hyy\")\r\n    //     let sortedArray = []\r\n    //     switch (type) {\r\n    //         case \"area\":\r\n    //             sortedArray = sortJobsDetailsByAreaOrCity(value, \"store_region\", jobsDetails);\r\n    //             setCities(getArrayByKey(\"city\"))//Get arrays of cities.\r\n\r\n    //             break;\r\n    //         case \"city\":\r\n    //             sortedArray = sortJobsDetailsByAreaOrCity(value, \"city\", jobsDetails);\r\n    //             setCities(getArrayByKey(\"city\"))//Get arrays of cities.\r\n    //             break;\r\n\r\n    //         default:\r\n    //             break;\r\n    //     }\r\n    //     setJobsDetails(sortedArray)\r\n    //     console.log(\"sortedArray\"+sortedArray.toString())\r\n\r\n\r\n    // }, []);\r\n\r\n    function getArrayByKey(key) {//Get array of certain key.\r\n        const set = new Set();\r\n        for (let job of jobsDetails) {\r\n            set.add(job[key]);\r\n        }\r\n\r\n        return [...set];\r\n    }\r\n    useEffect(() => {\r\n        // apiCall();//Get all data from api.\r\n        // setApiSort(props.apiSort)\r\n        setJobsDetails(props.apiSort)\r\n        setAreas(getArrayByKey(\"store_region\"));//Get array of areas.\r\n        setCities(getArrayByKey(\"city\"))//Get arrays of cities.\r\n    }, [jobsDetails,props.apiSort]);\r\n    return (<div>\r\n        <header>\r\n            <h1 className=\"h1\">JobLocator</h1>\r\n        </header>\r\n       \r\n        <Table areas={areas} cities={cities} jobsDetails={jobsDetails}></Table>\r\n    </div>);\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,MAA9B,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,2BAAP,MAAwC,cAAxC;;AACA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAAA;;EAC1C,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAACc,KAAK,CAACO,OAAP,CAAtC;EAEA,MAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAAC2B,MAAD,EAASC,SAAT,IAAsB5B,QAAQ,CAAC,EAAD,CAApC,CAR0C,CAS1C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAGA;;EAEA,SAAS6B,aAAT,CAAuBC,GAAvB,EAA4B;IAAC;IACzB,MAAMC,GAAG,GAAG,IAAIC,GAAJ,EAAZ;;IACA,KAAK,IAAIC,GAAT,IAAgBV,WAAhB,EAA6B;MACzBQ,GAAG,CAACG,GAAJ,CAAQD,GAAG,CAACH,GAAD,CAAX;IACH;;IAED,OAAO,CAAC,GAAGC,GAAJ,CAAP;EACH;;EACD9B,SAAS,CAAC,MAAM;IACZ;IACA;IACAuB,cAAc,CAACV,KAAK,CAACO,OAAP,CAAd;IACAK,QAAQ,CAACG,aAAa,CAAC,cAAD,CAAd,CAAR,CAJY,CAI4B;;IACxCD,SAAS,CAACC,aAAa,CAAC,MAAD,CAAd,CAAT,CALY,CAKoB;EACnC,CANQ,EAMN,CAACN,WAAD,EAAaT,KAAK,CAACO,OAAnB,CANM,CAAT;EAOA,oBAAQ;IAAA,wBACJ;MAAA,uBACI;QAAI,SAAS,EAAC,IAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADI,eAKJ,QAAC,KAAD;MAAO,KAAK,EAAEI,KAAd;MAAqB,MAAM,EAAEE,MAA7B;MAAqC,WAAW,EAAEJ;IAAlD;MAAA;MAAA;MAAA;IAAA,QALI;EAAA;IAAA;IAAA;IAAA;EAAA,QAAR;AAOH;;GAlEuBV,c;;KAAAA,c"},"metadata":{},"sourceType":"module"}