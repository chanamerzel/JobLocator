{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chani\\\\source\\\\repos\\\\MegaFlex2\\\\client-side\\\\apartments\\\\src\\\\components\\\\Client_Shoping_Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport Client_Nav from \"./Client_Nav\";\nimport cart_requests from './logic/cart_requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Client_Shoping_Cart() {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [proinstore, setproinstore] = useState([]);\n  const [outOfStock, setOutOfStock] = useState([]);\n  const [belowStock, setBelowStock] = useState([]);\n  const [shoeSizes, setshoeSizes] = useState([]);\n  const [quantity, setquantity] = useState([]);\n  let navigate = useNavigate();\n  useEffect(() => {\n    let myquantity = [];\n    let usercart = JSON.parse(sessionStorage.getItem('currentuser')).cart;\n    let Allitemss = usercart;\n    let shoesQuantity = []; // while (typeof shoesQuantity.length=='undefined' || shoesQuantity.length<Allitemss.length) {\n    //     shoesQuantity=getShoeSizes(Allitemss)\n    // }\n\n    shoesQuantity = getShoeSizes(Allitemss);\n    let userid = JSON.parse(sessionStorage.getItem('currentuser')).OrderID;\n    setProducts(Allitemss);\n    checkbtns(Allitemss);\n    checkAtStart(Allitemss);\n    Allitemss.forEach(element => {\n      myquantity.push({\n        quantity: element.QuantityItem,\n        itemname: element.ItemName,\n        shoeSize: element.ItemInCartSize\n      });\n    });\n    setquantity(myquantity);\n    return async () => {\n      let update = await cart_requests(\"update_items_in_cart\", {\n        quantity: Allitemss,\n        orderid: userid\n      }); // console.log(\"do i get size of shoe here? \"+JSON.parse(Allitemss))\n    };\n  }, []);\n\n  async function checkbtns(Allitemss) {\n    let arrm = [];\n    let arrp = [];\n    let userid = JSON.parse(sessionStorage.getItem('currentuser')).OrderID;\n    let shoesQuantity = await getShoeSizes(Allitemss); // console.log(\"client shoping cart 33 Allitemss[0].ItemInCartSize: \"+Allitemss[0].ItemInCartSize+\" Allitemss[1].ItemInCartSize: \"+Allitemss[1].ItemInCartSize)\n\n    let pro_in_cart_and_store = await fetch(`http://localhost:3678/products/itemsInOrder`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        OrderID: userid\n      })\n    });\n    pro_in_cart_and_store = await pro_in_cart_and_store.json();\n    setproinstore(pro_in_cart_and_store);\n    Allitemss.map(element => {\n      pro_in_cart_and_store.map((proelement, index) => {\n        if (element.ItemName === proelement.ItemName && parseInt(element.ItemInCartSize) === parseInt(proelement.ItemInCartSize)) {\n          if (element.QuantityItem >= shoesQuantity[index].Quantity) {\n            arrp.push(true);\n            arrm.push(false);\n          } else {\n            if (element.QuantityItem - 1 <= 0) {\n              arrm.push(true);\n              arrp.push(false);\n            } else {\n              arrp.push(false);\n              arrm.push(false);\n            }\n          }\n        }\n      });\n    });\n    setOutOfStock(arrp);\n    setBelowStock(arrm);\n  }\n\n  async function checkAtStart(Allitemss) {\n    let arrm = belowStock;\n    let arrp = outOfStock;\n    let arrq = quantity;\n    let user = JSON.parse(sessionStorage.getItem(\"currentuser\"));\n    let carty = user.cart;\n    let shoesQuantity = await getShoeSizes(Allitemss);\n    proinstore.map((proelement, i) => {\n      carty.map((cart, index) => {\n        if (cart.ItemName === proelement.ItemName && parseInt(cart.ItemInCartSize) === parseInt(proelement.ItemInCartSize)) {\n          if (cart.QuantityItem + 1 >= shoesQuantity[index].Quantity) {\n            arrp[i] = true;\n          } else {\n            if (cart.QuantityItem - 1 <= 0) {\n              arrm[i] = true;\n            } else {\n              arrp[i] = false;\n              arrm[i] = false;\n            }\n          }\n        }\n      });\n    });\n    setOutOfStock(arrp);\n    setBelowStock(arrm);\n  }\n\n  async function forPaying() {\n    navigate(\"/client/finalBill\", {\n      state: {\n        products: products\n      }\n    });\n  }\n\n  function saveToQuantity(i, myproduct, changeToQuantity) {\n    // let arrm = belowStock;\n    // let arrp = outOfStock;\n    let quantityArray = quantity;\n    quantityArray[i].quantity = changeToQuantity;\n    let user = JSON.parse(sessionStorage.getItem(\"currentuser\"));\n    let carty = user.cart;\n    carty.map((cart, index) => {\n      if (cart.ItemName === myproduct.ItemName && parseInt(cart.ItemInCartSize) === parseInt(myproduct.ItemInCartSize)) {\n        carty[index].QuantityItem = changeToQuantity;\n      }\n    });\n    sessionStorage.setItem(\"currentuser\", JSON.stringify({\n      password: user.password,\n      user_name: user.user_name,\n      cart: carty,\n      OrderID: user.OrderID\n    }));\n    setquantity(quantityArray);\n    return quantityArray;\n  }\n\n  async function increaseQ(i, myproduct) {\n    let arrm = belowStock;\n    let arrp = outOfStock;\n    let arrq = quantity;\n    arrq[i].quantity += 1;\n    let user = JSON.parse(sessionStorage.getItem(\"currentuser\"));\n    let carty = user.cart;\n    carty.map((cart, index) => {\n      if (cart.ItemName === myproduct.ItemName && parseInt(cart.ItemInCartSize) === parseInt(myproduct.ItemInCartSize)) {\n        carty[index].QuantityItem += 1;\n      }\n    });\n    sessionStorage.setItem(\"currentuser\", JSON.stringify({\n      password: user.password,\n      user_name: user.user_name,\n      cart: carty,\n      OrderID: user.OrderID\n    }));\n    setquantity(arrq);\n    proinstore.forEach((proelement, index) => {\n      if (myproduct.ItemName === proelement.ItemName && parseInt(proelement.ItemInCartSize) === parseInt(myproduct.ItemInCartSize)) {\n        if (myproduct.QuantityItem + 1 >= shoeSizes[index].Quantity) {\n          arrp[i] = true;\n        } else {\n          if (myproduct.QuantityItem - 1 <= 0) {\n            arrm[i] = true;\n          } else {\n            arrp[i] = false;\n            arrm[i] = false;\n          }\n        }\n      }\n    });\n    setOutOfStock(arrp);\n    setBelowStock(arrm);\n    window.location.reload();\n  }\n\n  async function reduceQ(i, myproduct) {\n    let arrm = belowStock;\n    let arrp = outOfStock;\n    let arrq = quantity;\n    let user = JSON.parse(sessionStorage.getItem(\"currentuser\"));\n    let carty = user.cart;\n    proinstore.map((proelement, index) => {\n      if (myproduct.ItemName === proelement.ItemName && parseInt(myproduct.ItemInCartSize) === parseInt(proelement.ItemInCartSize)) {\n        // if (myproduct.QuantityItem - 1 >= proelement.QuantityItem) {\n        //     arrp[i] = true;\n        // } else {\n        if (myproduct.QuantityItem - 1 <= 0) {\n          arrm[i] = true;\n        } else {\n          arrq[i].quantity -= 1;\n          carty.map((cart, index) => {\n            if (cart.ItemName === myproduct.ItemName && parseInt(cart.ItemInCartSize) === parseInt(myproduct.ItemInCartSize)) {\n              carty[index].QuantityItem -= 1;\n            }\n          });\n          arrp[i] = false;\n          arrm[i] = false;\n        } // }\n\n      }\n    });\n    sessionStorage.setItem(\"currentuser\", JSON.stringify({\n      password: user.password,\n      user_name: user.user_name,\n      cart: carty,\n      OrderID: user.OrderID\n    }));\n    setquantity(arrq);\n    setOutOfStock(arrp);\n    setBelowStock(arrm);\n    window.location.reload();\n  }\n\n  async function removeItem(i, myproduct) {\n    let curquantity = quantity;\n    curquantity.splice(i, 1);\n    setquantity(curquantity);\n    let arr = JSON.parse(sessionStorage.getItem(\"currentuser\"));\n    let cartarr = arr.cart;\n    cartarr.splice(i, 1);\n    sessionStorage.setItem(\"currentuser\", JSON.stringify({\n      password: arr.password,\n      user_name: arr.user_name,\n      cart: cartarr,\n      OrderID: arr.OrderID\n    }));\n    setProducts(cartarr);\n    let prod = await cart_requests(\"deleteitem\", {\n      myproduct: myproduct,\n      orderid: arr.OrderID\n    });\n\n    if (!prod) {\n      alert(\"Sorry. an error ocurred in deleting this product\");\n    }\n\n    setOutOfStock(outOfStock);\n    setBelowStock(belowStock);\n    getShoeSizes(cartarr);\n    window.location.reload();\n  }\n\n  async function setItemInCartSize(myproduct, shoeSize) {\n    let arr = JSON.parse(sessionStorage.getItem(\"currentuser\"));\n    let cartarr = arr.cart;\n    cartarr.map((pro, i) => {\n      if (pro.ItemName === myproduct.ItemName && pro.CodeItem === myproduct.CodeItem && parseInt(pro.ItemInCartSize) === parseInt(shoeSize)) {\n        removeItem(i, myproduct);\n        arr = JSON.parse(sessionStorage.getItem(\"currentuser\"));\n        cartarr = arr.cart;\n        cartarr[i].QuantityItem += myproduct.QuantityItem;\n        cartarr[i].ItemInCartSize = shoeSize;\n      }\n\n      if (pro.CodeItem === myproduct.CodeItem && parseInt(pro.ItemInCartSize) !== parseInt(shoeSize)) {\n        pro.ItemInCartSize = shoeSize;\n      }\n    });\n    sessionStorage.setItem(\"currentuser\", JSON.stringify({\n      password: arr.password,\n      user_name: arr.user_name,\n      cart: cartarr,\n      OrderID: arr.OrderID\n    }));\n    let myquantity = [];\n    arr = JSON.parse(sessionStorage.getItem(\"currentuser\"));\n    cartarr = arr.cart;\n    cartarr.forEach(element => {\n      myquantity.push({\n        quantity: element.QuantityItem,\n        itemname: element.ItemName,\n        shoeSize: element.ItemInCartSize\n      });\n    });\n    console.log(\"arr.OrderID: \" + arr.OrderID);\n    setquantity(myquantity);\n    let ans = await cart_requests(\"update_items_in_cart\", {\n      quantity: cartarr,\n      orderid: arr.OrderID\n    });\n    window.location.reload();\n  }\n\n  async function getShoeSizes(allproducts) {\n    // // for (let index = 0; index < products.length; index++) {\n    //     // let myproduct=products[index]\n    //     let shoeSizesArray = await fetch(`http://localhost:3678/quantityofsize/${myproduct.ItemName}`, {\n    //         method: 'POST',\n    //         headers: {\n    //             'Accept': 'application/json',\n    //             'Content-Type': 'application/json'\n    //         },\n    //         body: JSON.stringify({ code: myproduct.CodeItem })\n    //     });\n    //     shoeSizesArray = await shoeSizesArray.json();\n    //     let shoeSize=[]\n    //     shoeSize.push(shoeSizesArray)\n    //     setshoeSizes(shoeSize)\n    // // }\n    let shoeSizesArray = await fetch(`http://localhost:3678/quantityofsize/getShoeSizes`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        products: allproducts\n      })\n    });\n    shoeSizesArray = await shoeSizesArray.json();\n    setshoeSizes(shoeSizesArray);\n    return shoeSizesArray;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-color-gray\",\n    children: [/*#__PURE__*/_jsxDEV(Client_Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title\",\n      children: \"shoping cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: products.map((myproduct, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"tpg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sign-up-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container\",\n                style: {\n                  paddingLeft: \"90px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"title2\",\n                    children: myproduct.ItemName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"product_images\",\n                    src: myproduct.path\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 51\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"sizeOfShoe\",\n                      children: \" size of shoe:  \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      id: \"sizeOfShoe\",\n                      onChange: e => setItemInCartSize(myproduct, e.target.value),\n                      name: \"sizeOfShoe\",\n                      children: shoeSizes[index] && shoeSizes[index].map((currentshoesize, i) => {\n                        if (parseInt(myproduct.ItemInCartSize) === currentshoesize.ShoeSize) {\n                          return /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: currentshoesize.ShoeSize,\n                            selected: \"selected\",\n                            children: currentshoesize.ShoeSize\n                          }, i, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 284,\n                            columnNumber: 64\n                          }, this);\n                        } else {\n                          if (currentshoesize.Quantity > 0) {\n                            return /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: currentshoesize.ShoeSize,\n                              children: currentshoesize.ShoeSize\n                            }, i, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 288,\n                              columnNumber: 68\n                            }, this);\n                          }\n                        }\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Price: \", myproduct.Price * myproduct.QuantityItem, \"$\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"title3\",\n                    children: \"quantity: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 41\n                  }, this), shoeSizes[index] && shoeSizes[index].map((currentshoesize, i) => {\n                    if (parseInt(myproduct.ItemInCartSize) === currentshoesize.ShoeSize) {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"title3\",\n                          children: quantity[index].quantity > shoeSizes[index][i].Quantity ? saveToQuantity(index, myproduct, shoeSizes[index][i].Quantity) : quantity[index].quantity\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 299,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"toS\",\n                          disabled: shoeSizes.length >= 1 ? shoeSizes[index][i].Quantity <= quantity[index].quantity : false,\n                          onClick: () => {\n                            increaseQ(index, myproduct);\n                          },\n                          children: \"+\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 300,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"toS\",\n                          disabled: quantity[index].quantity > 1 ? false : true,\n                          onClick: () => {\n                            reduceQ(index, myproduct);\n                          },\n                          children: \"-\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 301,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 57\n                      }, this);\n                    }\n                  }), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"but2\",\n                    onClick: () => {\n                      removeItem(index, myproduct);\n                    },\n                    children: \"remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 37\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"my-btn\",\n      onClick: forPaying,\n      children: \"PayMent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Client_Shoping_Cart, \"8pMCW+X5KP3iSrTILp/Ykg488OM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Client_Shoping_Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Client_Shoping_Cart\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Client_Nav","cart_requests","Client_Shoping_Cart","products","setProducts","proinstore","setproinstore","outOfStock","setOutOfStock","belowStock","setBelowStock","shoeSizes","setshoeSizes","quantity","setquantity","navigate","myquantity","usercart","JSON","parse","sessionStorage","getItem","cart","Allitemss","shoesQuantity","getShoeSizes","userid","OrderID","checkbtns","checkAtStart","forEach","element","push","QuantityItem","itemname","ItemName","shoeSize","ItemInCartSize","update","orderid","arrm","arrp","pro_in_cart_and_store","fetch","method","headers","body","stringify","json","map","proelement","index","parseInt","Quantity","arrq","user","carty","i","forPaying","state","saveToQuantity","myproduct","changeToQuantity","quantityArray","setItem","password","user_name","increaseQ","window","location","reload","reduceQ","removeItem","curquantity","splice","arr","cartarr","prod","alert","setItemInCartSize","pro","CodeItem","console","log","ans","allproducts","shoeSizesArray","paddingLeft","path","e","target","value","currentshoesize","ShoeSize","Price","length"],"sources":["C:/Users/Chani/source/repos/MegaFlex2/client-side/apartments/src/components/Client_Shoping_Cart.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Client_Nav from \"./Client_Nav\";\r\nimport cart_requests from './logic/cart_requests'\r\nexport default function Client_Shoping_Cart() {\r\n    const [products, setProducts] = useState([]);\r\n    const [proinstore, setproinstore] = useState([]);\r\n    const [outOfStock, setOutOfStock] = useState([]);\r\n    const [belowStock, setBelowStock] = useState([]);\r\n    const [shoeSizes, setshoeSizes] = useState([])\r\n\r\n    const [quantity, setquantity] = useState([]);\r\n    let navigate = useNavigate();\r\n    useEffect(() => {\r\n        let myquantity = [];\r\n        let usercart = JSON.parse(sessionStorage.getItem('currentuser')).cart;\r\n        let Allitemss = usercart;\r\n        let shoesQuantity = [];\r\n        // while (typeof shoesQuantity.length=='undefined' || shoesQuantity.length<Allitemss.length) {\r\n        //     shoesQuantity=getShoeSizes(Allitemss)\r\n        // }\r\n        shoesQuantity = getShoeSizes(Allitemss)\r\n        let userid = JSON.parse(sessionStorage.getItem('currentuser')).OrderID;\r\n        setProducts(Allitemss);\r\n        checkbtns(Allitemss);\r\n        checkAtStart(Allitemss);\r\n        Allitemss.forEach(element => {\r\n            myquantity.push({ quantity: element.QuantityItem, itemname: element.ItemName, shoeSize: element.ItemInCartSize });\r\n        })\r\n        setquantity(myquantity);\r\n        return async () => {\r\n            let update = await cart_requests(\"update_items_in_cart\", { quantity: Allitemss, orderid: userid })\r\n            // console.log(\"do i get size of shoe here? \"+JSON.parse(Allitemss))\r\n        }\r\n    }, []);\r\n\r\n    async function checkbtns(Allitemss) {\r\n        let arrm = [];\r\n        let arrp = [];\r\n        let userid = JSON.parse(sessionStorage.getItem('currentuser')).OrderID;\r\n        let shoesQuantity =await getShoeSizes(Allitemss)\r\n\r\n        // console.log(\"client shoping cart 33 Allitemss[0].ItemInCartSize: \"+Allitemss[0].ItemInCartSize+\" Allitemss[1].ItemInCartSize: \"+Allitemss[1].ItemInCartSize)\r\n        let pro_in_cart_and_store = await fetch(`http://localhost:3678/products/itemsInOrder`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ OrderID: userid })\r\n        })\r\n        pro_in_cart_and_store = await (pro_in_cart_and_store).json();\r\n        setproinstore(pro_in_cart_and_store);\r\n        Allitemss.map(element => {\r\n            pro_in_cart_and_store.map((proelement, index) => {\r\n                if (element.ItemName === proelement.ItemName && parseInt(element.ItemInCartSize) === parseInt(proelement.ItemInCartSize)) {\r\n                    if (element.QuantityItem >= shoesQuantity[index].Quantity) {\r\n                        arrp.push(true);\r\n                        arrm.push(false)\r\n                    } else {\r\n                        if (element.QuantityItem - 1 <= 0) {\r\n                            arrm.push(true);\r\n                            arrp.push(false);\r\n                        } else {\r\n                            arrp.push(false);\r\n                            arrm.push(false);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        setOutOfStock(arrp);\r\n        setBelowStock(arrm);\r\n    }\r\n    async function checkAtStart(Allitemss) {\r\n        let arrm = belowStock;\r\n        let arrp = outOfStock;\r\n        let arrq = quantity;\r\n        let user = JSON.parse(sessionStorage.getItem(\"currentuser\"));\r\n        let carty = user.cart;\r\n        let shoesQuantity = await getShoeSizes(Allitemss)\r\n        proinstore.map((proelement, i) => {\r\n            carty.map((cart, index) => {\r\n                if (cart.ItemName === proelement.ItemName && parseInt(cart.ItemInCartSize) === parseInt(proelement.ItemInCartSize)) {\r\n                    if (cart.QuantityItem + 1 >= shoesQuantity[index].Quantity) {\r\n                        arrp[i] = true;\r\n                    }\r\n                    else {\r\n                        if (cart.QuantityItem - 1 <= 0) {\r\n                            arrm[i] = true;\r\n                        } else {\r\n                            arrp[i] = false;\r\n                            arrm[i] = false;\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        });\r\n        setOutOfStock(arrp);\r\n        setBelowStock(arrm);\r\n    }\r\n    async function forPaying() {\r\n        navigate(\"/client/finalBill\", { state: { products: products } });\r\n    }\r\n    function saveToQuantity(i, myproduct,changeToQuantity){\r\n        // let arrm = belowStock;\r\n        // let arrp = outOfStock;\r\n        let quantityArray = quantity;\r\n        quantityArray[i].quantity = changeToQuantity;\r\n        let user = JSON.parse(sessionStorage.getItem(\"currentuser\"));\r\n        let carty = user.cart;\r\n        carty.map((cart, index) => {\r\n            if (cart.ItemName === myproduct.ItemName && parseInt(cart.ItemInCartSize) === parseInt(myproduct.ItemInCartSize)) {\r\n                carty[index].QuantityItem = changeToQuantity;\r\n            }\r\n        })\r\n        sessionStorage.setItem(\"currentuser\", JSON.stringify({ password: user.password, user_name: user.user_name, cart: carty, OrderID: user.OrderID }));\r\n        setquantity(quantityArray);\r\n        return quantityArray\r\n    }\r\n    async function increaseQ(i, myproduct) {\r\n        let arrm = belowStock;\r\n        let arrp = outOfStock;\r\n        let arrq = quantity;\r\n        arrq[i].quantity += 1;\r\n        let user = JSON.parse(sessionStorage.getItem(\"currentuser\"));\r\n        let carty = user.cart;\r\n        carty.map((cart, index) => {\r\n            if (cart.ItemName === myproduct.ItemName && parseInt(cart.ItemInCartSize) === parseInt(myproduct.ItemInCartSize)) {\r\n                carty[index].QuantityItem += 1;\r\n            }\r\n        })\r\n        sessionStorage.setItem(\"currentuser\", JSON.stringify({ password: user.password, user_name: user.user_name, cart: carty, OrderID: user.OrderID }));\r\n        setquantity(arrq);\r\n\r\n        proinstore.forEach((proelement, index) => {\r\n            if (myproduct.ItemName === proelement.ItemName && parseInt(proelement.ItemInCartSize) === parseInt(myproduct.ItemInCartSize)) {\r\n                if (myproduct.QuantityItem + 1 >= shoeSizes[index].Quantity) {\r\n                    arrp[i] = true;\r\n                } else {\r\n                    if (myproduct.QuantityItem - 1 <= 0) {\r\n                        arrm[i] = true;\r\n                    } else {\r\n                        arrp[i] = false;\r\n                        arrm[i] = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        setOutOfStock(arrp);\r\n        setBelowStock(arrm);\r\n        window.location.reload();\r\n    }\r\n    async function reduceQ(i, myproduct) {\r\n        let arrm = belowStock;\r\n        let arrp = outOfStock;\r\n        let arrq = quantity;\r\n        let user = JSON.parse(sessionStorage.getItem(\"currentuser\"));\r\n        let carty = user.cart;\r\n        proinstore.map((proelement, index) => {\r\n            if (myproduct.ItemName === proelement.ItemName && parseInt(myproduct.ItemInCartSize) === parseInt(proelement.ItemInCartSize)) {\r\n                // if (myproduct.QuantityItem - 1 >= proelement.QuantityItem) {\r\n                //     arrp[i] = true;\r\n                // } else {\r\n                if (myproduct.QuantityItem - 1 <= 0) {\r\n                    arrm[i] = true;\r\n                } else {\r\n                    arrq[i].quantity -= 1;\r\n                    carty.map((cart, index) => {\r\n                        if (cart.ItemName === myproduct.ItemName && parseInt(cart.ItemInCartSize) === parseInt(myproduct.ItemInCartSize)) {\r\n                            carty[index].QuantityItem -= 1;\r\n                        }\r\n                    })\r\n                    arrp[i] = false;\r\n                    arrm[i] = false;\r\n                }\r\n                // }\r\n            }\r\n        });\r\n        sessionStorage.setItem(\"currentuser\", JSON.stringify({ password: user.password, user_name: user.user_name, cart: carty, OrderID: user.OrderID }));\r\n        setquantity(arrq);\r\n        setOutOfStock(arrp);\r\n        setBelowStock(arrm);\r\n        window.location.reload();\r\n    }\r\n    async function removeItem(i, myproduct) {\r\n        let curquantity = quantity;\r\n        curquantity.splice(i, 1);\r\n        setquantity(curquantity);\r\n        let arr = JSON.parse(sessionStorage.getItem(\"currentuser\"));\r\n        let cartarr = arr.cart;\r\n        cartarr.splice(i, 1);\r\n        sessionStorage.setItem(\"currentuser\", JSON.stringify({ password: arr.password, user_name: arr.user_name, cart: cartarr, OrderID: arr.OrderID }));\r\n        setProducts(cartarr);\r\n        let prod = await cart_requests(\"deleteitem\", { myproduct: myproduct, orderid: arr.OrderID })\r\n        if (!prod) {\r\n            alert(\"Sorry. an error ocurred in deleting this product\")\r\n        }\r\n        setOutOfStock(outOfStock);\r\n        setBelowStock(belowStock);\r\n        getShoeSizes(cartarr)\r\n        window.location.reload();\r\n    }\r\n    async function setItemInCartSize(myproduct, shoeSize) {\r\n        let arr = JSON.parse(sessionStorage.getItem(\"currentuser\"));\r\n        let cartarr = arr.cart;\r\n        cartarr.map((pro, i) => {\r\n            if (pro.ItemName === myproduct.ItemName && pro.CodeItem === myproduct.CodeItem && parseInt(pro.ItemInCartSize) === parseInt(shoeSize)) {\r\n                removeItem(i, myproduct)\r\n                arr = JSON.parse(sessionStorage.getItem(\"currentuser\"));\r\n                cartarr = arr.cart;\r\n                cartarr[i].QuantityItem += myproduct.QuantityItem;\r\n                cartarr[i].ItemInCartSize = shoeSize;\r\n            }\r\n            if (pro.CodeItem === myproduct.CodeItem && parseInt(pro.ItemInCartSize) !== parseInt(shoeSize)) {\r\n                pro.ItemInCartSize = shoeSize;\r\n            }\r\n        })\r\n        sessionStorage.setItem(\"currentuser\", JSON.stringify({ password: arr.password, user_name: arr.user_name, cart: cartarr, OrderID: arr.OrderID }));\r\n        let myquantity = [];\r\n        arr = JSON.parse(sessionStorage.getItem(\"currentuser\"));\r\n        cartarr = arr.cart;\r\n        cartarr.forEach(element => {\r\n            myquantity.push({ quantity: element.QuantityItem, itemname: element.ItemName, shoeSize: element.ItemInCartSize });\r\n        })\r\n        console.log(\"arr.OrderID: \" + arr.OrderID)\r\n        setquantity(myquantity);\r\n        let ans = await cart_requests(\"update_items_in_cart\", { quantity: cartarr, orderid: arr.OrderID })\r\n        window.location.reload();\r\n    }\r\n\r\n    async function getShoeSizes(allproducts) {\r\n        // // for (let index = 0; index < products.length; index++) {\r\n        //     // let myproduct=products[index]\r\n        //     let shoeSizesArray = await fetch(`http://localhost:3678/quantityofsize/${myproduct.ItemName}`, {\r\n        //         method: 'POST',\r\n        //         headers: {\r\n        //             'Accept': 'application/json',\r\n        //             'Content-Type': 'application/json'\r\n        //         },\r\n        //         body: JSON.stringify({ code: myproduct.CodeItem })\r\n        //     });\r\n        //     shoeSizesArray = await shoeSizesArray.json();\r\n        //     let shoeSize=[]\r\n        //     shoeSize.push(shoeSizesArray)\r\n        //     setshoeSizes(shoeSize)\r\n        // // }\r\n        let shoeSizesArray = await fetch(`http://localhost:3678/quantityofsize/getShoeSizes`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ products: allproducts })\r\n        });\r\n        shoeSizesArray = await shoeSizesArray.json();\r\n        setshoeSizes(shoeSizesArray)\r\n        return shoeSizesArray\r\n\r\n    }\r\n    return (<div className=\"background-color-gray\">\r\n        <Client_Nav />\r\n        <p className=\"title\">shoping cart</p>\r\n        <div >\r\n            {products.map((myproduct, index) => (\r\n                <div key={index}>\r\n                    <section className=\"tpg\">\r\n                        <div className=\"sign-up-card\">\r\n                            <div className=\"form\">\r\n                                <div className=\"container\" style={{ paddingLeft: \"90px\" }} key={index}>\r\n                                    <br></br>\r\n                                    <div className=\"image\">\r\n                                        <p className=\"title2\">{myproduct.ItemName}</p>\r\n                                        <img className=\"product_images\" src={myproduct.path}></img>\r\n                                    </div>\r\n                                    <div className=\"text\">\r\n                                        <form >\r\n                                            <br /><br />\r\n                                            <label htmlFor=\"sizeOfShoe\"> size of shoe:  </label>\r\n                                            <select id=\"sizeOfShoe\" onChange={(e) => setItemInCartSize(myproduct, e.target.value)} name=\"sizeOfShoe\">\r\n\r\n                                                {shoeSizes[index] && shoeSizes[index].map((currentshoesize, i) => {\r\n                                                    if (parseInt(myproduct.ItemInCartSize) === currentshoesize.ShoeSize) {\r\n                                                        return <option key={i} value={currentshoesize.ShoeSize} selected=\"selected\">{currentshoesize.ShoeSize}</option>\r\n                                                    }\r\n                                                    else {\r\n                                                        if (currentshoesize.Quantity > 0) {\r\n                                                            return <option key={i} value={currentshoesize.ShoeSize}>{currentshoesize.ShoeSize}</option>\r\n                                                        }\r\n                                                    }\r\n                                                })}\r\n                                            </select>\r\n                                        </form>\r\n                                        <p>Price: {myproduct.Price * myproduct.QuantityItem}$</p>\r\n                                        <p className=\"title3\">quantity: </p>\r\n                                        {shoeSizes[index] && shoeSizes[index].map((currentshoesize, i) => {\r\n                                            if (parseInt(myproduct.ItemInCartSize) === currentshoesize.ShoeSize) {\r\n                                                return( <div>\r\n                                                    <p className=\"title3\">{quantity[index].quantity > shoeSizes[index][i].Quantity ? saveToQuantity(index, myproduct,shoeSizes[index][i].Quantity) : quantity[index].quantity}</p>\r\n                                                    <button className=\"toS\" disabled={shoeSizes.length >= 1 ? shoeSizes[index][i].Quantity <= quantity[index].quantity : false} onClick={() => { increaseQ(index, myproduct) }}>+</button>\r\n                                                    <button className=\"toS\" disabled={quantity[index].quantity > 1 ? false : true} onClick={() => { reduceQ(index, myproduct) }}>-</button>\r\n\r\n                                                </div>)\r\n                                            }\r\n                                        })}\r\n                                        <button className=\"but2\" onClick={() => { removeItem(index, myproduct) }}>remove</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            ))}\r\n        </div>\r\n        <button className=\"my-btn\" onClick={forPaying}>PayMent</button>\r\n    </div>);\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}