{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chani\\\\Desktop\\\\\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\MegaFlex2\\\\client-side\\\\apartments\\\\src\\\\components\\\\Main_Component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Routes, Route, Link, Outlet } from 'react-router-dom';\nimport Table from \"./Table\";\nimport Drop_Down from \"./Drop_Down\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main_Component(props) {\n  _s();\n\n  const [jobsDetails, setJobsDetails] = useState(0);\n  const [areas, setAreas] = useState([]);\n  const [cities, setCities] = useState([]);\n\n  function sortJobsDetailsByAreaOrCity(area, key) {\n    const set = new Set();\n\n    for (let job of jobsDetails) {\n      if (job[key] === area) {\n        set.add(job);\n      }\n    }\n\n    setJobsDetails([...set]); // window.location.reload()\n  }\n\n  const saveDropDownValues = useCallback((value, type) => {\n    alert(\"value: \" + value + \" type\" + type);\n\n    switch (type) {\n      case \"area\":\n        sortJobsDetailsByAreaOrCity(value, \"store_region\");\n        setCities(getArrayByKey(\"city\")); //Get arrays of cities.\n\n        break;\n\n      case \"city\":\n        sortJobsDetailsByAreaOrCity(value, \"city\");\n        setCities(getArrayByKey(\"city\")); //Get arrays of cities.\n\n        break;\n\n      default:\n        break;\n    }\n  }, []);\n\n  async function apiCall() {\n    //Gets all data from api.\n    try {\n      let response = await fetch('http://localhost:3003/api/getAll');\n      response = await response.json();\n      setJobsDetails(response);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  function getArrayByKey(key) {\n    //Get array of certain key.\n    const set = new Set();\n\n    for (let job of jobsDetails) {\n      set.add(job[key]);\n    }\n\n    return [...set];\n  }\n\n  useEffect(() => {\n    if (jobsDetails == 0) {\n      apiCall(); //Get all data from api.\n\n      setAreas(getArrayByKey(\"store_region\")); //Get array of areas.\n\n      setCities(getArrayByKey(\"city\")); //Get arrays of cities.\n    }\n  }, [jobsDetails]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h1\",\n        children: \"JobLocator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"search by name of shoe: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Drop_Down, {\n        dropDownArray: areas,\n        dropDownType: \"area\",\n        onChangeFunction: () => saveDropDownValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Drop_Down, {\n        dropDownArray: cities,\n        dropDownType: \"city\",\n        onChangeFunction: () => saveDropDownValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      jobsDetails: jobsDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Main_Component, \"UNN3T9HUvYWL/rfPp5uy/TQS6nQ=\");\n\n_c = Main_Component;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main_Component\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","useLocation","Routes","Route","Link","Outlet","Table","Drop_Down","Main_Component","props","jobsDetails","setJobsDetails","areas","setAreas","cities","setCities","sortJobsDetailsByAreaOrCity","area","key","set","Set","job","add","saveDropDownValues","value","type","alert","getArrayByKey","apiCall","response","fetch","json","error","console"],"sources":["C:/Users/Chani/Desktop/עבודה/MegaFlex2/client-side/apartments/src/components/Main_Component.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Routes, Route, Link, Outlet } from 'react-router-dom';\r\nimport Table from \"./Table\";\r\nimport Drop_Down from \"./Drop_Down\";\r\nexport default function Main_Component(props) {\r\n    const [jobsDetails, setJobsDetails] = useState(0)\r\n    const [areas, setAreas] = useState([])\r\n    const [cities, setCities] = useState([])\r\n    function sortJobsDetailsByAreaOrCity(area, key) {\r\n        const set = new Set();\r\n        for (let job of jobsDetails) {\r\n            if (job[key] === area) {\r\n                set.add(job);\r\n            }\r\n        }\r\n        setJobsDetails([...set]);\r\n        // window.location.reload()\r\n    }\r\n\r\n    const saveDropDownValues = useCallback((value, type) => {\r\n        alert(\"value: \" + value + \" type\" + type);\r\n        switch (type) {\r\n            case \"area\":\r\n                sortJobsDetailsByAreaOrCity(value, \"store_region\");\r\n                setCities(getArrayByKey(\"city\"))//Get arrays of cities.\r\n\r\n                break;\r\n            case \"city\":\r\n                sortJobsDetailsByAreaOrCity(value, \"city\");\r\n                setCities(getArrayByKey(\"city\"))//Get arrays of cities.\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }, []);\r\n    async function apiCall() {//Gets all data from api.\r\n        try {\r\n            let response = await fetch('http://localhost:3003/api/getAll');\r\n            response = await response.json()\r\n            setJobsDetails(response);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    function getArrayByKey(key) {//Get array of certain key.\r\n        const set = new Set();\r\n        for (let job of jobsDetails) {\r\n            set.add(job[key]);\r\n        }\r\n\r\n        return [...set];\r\n    }\r\n    useEffect(() => {\r\n        if (jobsDetails == 0) {\r\n            apiCall();//Get all data from api.\r\n            setAreas(getArrayByKey(\"store_region\"));//Get array of areas.\r\n            setCities(getArrayByKey(\"city\"))//Get arrays of cities.\r\n        }\r\n\r\n    }, [jobsDetails]);\r\n    return (<div>\r\n        <header>\r\n            <h1 className=\"h1\">JobLocator</h1>\r\n        </header>\r\n        <div>\r\n            <p >search by name of shoe: </p>\r\n            <input type='text' placeholder='search..' />\r\n\r\n            <Drop_Down dropDownArray={areas} dropDownType=\"area\" onChangeFunction={() => saveDropDownValues} />\r\n            <Drop_Down dropDownArray={cities} dropDownType=\"city\" onChangeFunction={() => saveDropDownValues} />\r\n        </div>\r\n        <Table jobsDetails={jobsDetails}></Table>\r\n    </div>);\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}