{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chani\\\\Desktop\\\\\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\MegaFlex2 - Copy\\\\client-side\\\\apartments\\\\src\\\\components\\\\SearchAndSort.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Routes, Route, Link, Outlet } from 'react-router-dom';\nimport Drop_Down from \"./Drop_Down\";\nimport getArrayByKey from './logic/getArrayByKey';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchAndSort(props) {\n  _s();\n\n  const [areas, setAreas] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [check, setcheck] = useState(false);\n\n  function setStates() {\n    setcheck(true);\n    let jobsDetails = JSON.parse(sessionStorage.getItem(\"currentTable\")).response;\n    setAreas(getArrayByKey(\"store_region\", jobsDetails)); //Get array of areas.\n\n    setCities(getArrayByKey(\"city\", jobsDetails)); //Get arrays of cities.\n\n    console.log(\"props.jobsDetails1 \" + jobsDetails);\n  }\n\n  useEffect(() => {\n    setStates();\n  }, [props.jobsDetails]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }, this);\n}\n\n_s(SearchAndSort, \"V9pC8G09OPMBPBYyoMvsZF1ojGM=\");\n\n_c = SearchAndSort;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchAndSort\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","Routes","Route","Link","Outlet","Drop_Down","getArrayByKey","SearchAndSort","props","areas","setAreas","cities","setCities","check","setcheck","setStates","jobsDetails","JSON","parse","sessionStorage","getItem","response","console","log"],"sources":["C:/Users/Chani/Desktop/עבודה/MegaFlex2 - Copy/client-side/apartments/src/components/SearchAndSort.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Routes, Route, Link, Outlet } from 'react-router-dom';\r\nimport Drop_Down from \"./Drop_Down\";\r\nimport getArrayByKey from'./logic/getArrayByKey'\r\nexport default function SearchAndSort(props) {\r\n    const [areas, setAreas] = useState([])\r\n    const [cities, setCities] = useState([])\r\n    const [check, setcheck] = useState(false)\r\n\r\n    function setStates(){\r\n        setcheck(true)\r\n        let jobsDetails=JSON.parse(sessionStorage.getItem(\"currentTable\")).response\r\n        setAreas(getArrayByKey(\"store_region\",jobsDetails));//Get array of areas.\r\n        setCities(getArrayByKey(\"city\",jobsDetails))//Get arrays of cities.\r\n        console.log(\"props.jobsDetails1 \" + jobsDetails)\r\n\r\n    }\r\n    useEffect(() => {\r\n       setStates()\r\n    },[props.jobsDetails]);\r\n    return (<div >\r\n       \r\n    </div>);\r\n}\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,MAA9B,QAA4C,kBAA5C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAAyB,uBAAzB;;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EACzC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,KAAD,CAAlC;;EAEA,SAASmB,SAAT,GAAoB;IAChBD,QAAQ,CAAC,IAAD,CAAR;IACA,IAAIE,WAAW,GAACC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAAX,EAAmDC,QAAnE;IACAX,QAAQ,CAACJ,aAAa,CAAC,cAAD,EAAgBU,WAAhB,CAAd,CAAR,CAHgB,CAGoC;;IACpDJ,SAAS,CAACN,aAAa,CAAC,MAAD,EAAQU,WAAR,CAAd,CAAT,CAJgB,CAI4B;;IAC5CM,OAAO,CAACC,GAAR,CAAY,wBAAwBP,WAApC;EAEH;;EACDnB,SAAS,CAAC,MAAM;IACbkB,SAAS;EACX,CAFQ,EAEP,CAACP,KAAK,CAACQ,WAAP,CAFO,CAAT;EAGA,oBAAQ;IAAA;IAAA;IAAA;EAAA,QAAR;AAGH;;GAnBuBT,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}