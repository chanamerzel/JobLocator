{"ast":null,"code":"export default async function orders_requests(name) {\n  let values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  //returns the list of all the categories available in the shop\n  let response = [];\n\n  switch (name) {\n    case \"exists\":\n      response = check_order_existence(values);\n      break;\n\n    case \"setOrder\":\n      response = setOrder(values);\n      break;\n\n    case \"updateOrdered/1\":\n      response = updateOrdered_1(values);\n      break;\n\n    case \"updateOrdered/price\":\n      response = updateOrdered_Price(values);\n      break;\n\n    case \"add\":\n      response = add(values);\n      break;\n\n    default:\n      break;\n  }\n\n  return response;\n}\n\nasync function check_order_existence(values) {\n  console.log(values);\n  let ord = await fetch(`http://localhost:3678/orders/exists`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      CustomerID: values.CustomerID,\n      FirstName: values.FirstName\n    })\n  });\n  let order = await ord.json();\n  return order;\n}\n\nasync function setOrder(values) {\n  let setaddress = await fetch(`http://localhost:3678/orders/setOrder`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(values)\n  });\n  setaddress = await setaddress.json();\n  return setaddress;\n}\n\nasync function updateOrdered_1(values) {\n  let updateStatus = await fetch(`http://localhost:3678/orders/updateOrdered/1`, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(values)\n  });\n  updateStatus = await updateStatus.json();\n  return updateStatus;\n}\n\nasync function updateOrdered_Price(values) {\n  let updatePrice = await fetch(`http://localhost:3678/orders/updateOrdered/price`, {\n    method: 'Put',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(values)\n  });\n  updatePrice = await updatePrice.json();\n  return updatePrice;\n}\n\nasync function add(values) {\n  let orderCode = await fetch(`http://localhost:3678/orders/add`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(values)\n  });\n  orderCode = await orderCode.json();\n  return orderCode;\n}","map":{"version":3,"names":["orders_requests","name","values","response","check_order_existence","setOrder","updateOrdered_1","updateOrdered_Price","add","console","log","ord","fetch","method","headers","body","JSON","stringify","CustomerID","FirstName","order","json","setaddress","updateStatus","updatePrice","orderCode"],"sources":["C:/Users/Chani/source/repos/MegaFlex2/client-side/apartments/src/components/logic/orders_requests.js"],"sourcesContent":["export default async function orders_requests(name, values = null) { //returns the list of all the categories available in the shop\r\n    let response = [];\r\n    switch (name) {\r\n        case \"exists\":\r\n            response = check_order_existence(values)\r\n            break;\r\n        case \"setOrder\":\r\n            response = setOrder(values)\r\n            break;\r\n        case \"updateOrdered/1\":\r\n            response = updateOrdered_1(values)\r\n            break;\r\n        case \"updateOrdered/price\":\r\n            response = updateOrdered_Price(values)\r\n            break;\r\n        case \"add\":\r\n            response = add(values)\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return response\r\n}\r\nasync function check_order_existence(values) {\r\n    console.log(values)\r\n    let ord = await fetch(`http://localhost:3678/orders/exists`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ CustomerID: values.CustomerID, FirstName: values.FirstName })\r\n    });\r\n    let order = await ord.json();\r\n\r\n    return order\r\n}\r\nasync function setOrder(values) {\r\n    let setaddress = await fetch(`http://localhost:3678/orders/setOrder`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(values)\r\n    });\r\n    setaddress = await setaddress.json();\r\n    return setaddress\r\n}\r\nasync function updateOrdered_1(values) {\r\n    let updateStatus = await fetch(`http://localhost:3678/orders/updateOrdered/1`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(values)\r\n    });\r\n    updateStatus = await updateStatus.json();\r\n    return updateStatus\r\n}\r\nasync function updateOrdered_Price(values) {\r\n    let updatePrice = await fetch(`http://localhost:3678/orders/updateOrdered/price`, {\r\n        method: 'Put',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(values)\r\n    });\r\n    updatePrice = await updatePrice.json();\r\n    return updatePrice\r\n}\r\nasync function add(values) {\r\n    let orderCode = await fetch(`http://localhost:3678/orders/add`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(values)\r\n    });\r\n    orderCode = await orderCode.json();\r\n    return orderCode\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}