{"ast":null,"code":"export default function dropDownSort(value, type, jobsDetails) {\n  //Sending data to sorting functions and getting back two lists.\n  let objectsList = [];\n  let attributesList = [];\n\n  switch (type) {\n    case \"store_region\":\n      objectsList = sortJobsDetailsByAreaOrCity(value, \"store_region\", jobsDetails);\n      break;\n\n    case \"city\":\n      objectsList = sortJobsDetailsByAreaOrCity(value, \"city\", jobsDetails);\n      break;\n\n    default:\n      break;\n  }\n\n  attributesList = sortByAttribute(\"city\", objectsList);\n  return [objectsList, attributesList];\n}\n;\n\nfunction sortJobsDetailsByAreaOrCity(value, key, jobsDetails) {\n  //Returns object list sorted by given attribute.\n  return jobsDetails.filter(job => job[key].trim() === value.trim());\n}\n\nfunction sortByAttribute(key, jobsDetails) {\n  //Returns list of specific attribute without duplicates.\n  let response = [];\n  jobsDetails.forEach(job => {\n    if (!response.includes(job[key].trimEnd())) {\n      response.push(job[key].trimEnd());\n    }\n  });\n  return response;\n}","map":{"version":3,"names":["dropDownSort","value","type","jobsDetails","objectsList","attributesList","sortJobsDetailsByAreaOrCity","sortByAttribute","key","filter","job","trim","response","forEach","includes","trimEnd","push"],"sources":["C:/Users/Chani/Desktop/עבודה/MegaFlex2 - Copy/client-side/apartments/src/components/logic/sort.js"],"sourcesContent":["export default function dropDownSort(value, type, jobsDetails) { //Sending data to sorting functions and getting back two lists.\r\n    let objectsList = []\r\n    let attributesList = []\r\n    switch (type) {\r\n        case \"store_region\":\r\n            objectsList = sortJobsDetailsByAreaOrCity(value, \"store_region\", jobsDetails);\r\n            break;\r\n        case \"city\":\r\n            objectsList = sortJobsDetailsByAreaOrCity(value, \"city\", jobsDetails);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    attributesList = sortByAttribute(\"city\", objectsList)\r\n    return [objectsList, attributesList]\r\n};\r\n\r\nfunction sortJobsDetailsByAreaOrCity(value, key, jobsDetails) { //Returns object list sorted by given attribute.\r\n    return jobsDetails.filter(job => job[key].trim() === value.trim());\r\n}\r\n\r\nfunction sortByAttribute(key, jobsDetails) { //Returns list of specific attribute without duplicates.\r\n    let response = []\r\n    jobsDetails.forEach(job => {\r\n        if (!response.includes(job[key].trimEnd())) {\r\n            response.push(job[key].trimEnd())\r\n        }\r\n    });\r\n    return response\r\n}"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,IAA7B,EAAmCC,WAAnC,EAAgD;EAAE;EAC7D,IAAIC,WAAW,GAAG,EAAlB;EACA,IAAIC,cAAc,GAAG,EAArB;;EACA,QAAQH,IAAR;IACI,KAAK,cAAL;MACIE,WAAW,GAAGE,2BAA2B,CAACL,KAAD,EAAQ,cAAR,EAAwBE,WAAxB,CAAzC;MACA;;IACJ,KAAK,MAAL;MACIC,WAAW,GAAGE,2BAA2B,CAACL,KAAD,EAAQ,MAAR,EAAgBE,WAAhB,CAAzC;MACA;;IACJ;MACI;EARR;;EAUAE,cAAc,GAAGE,eAAe,CAAC,MAAD,EAASH,WAAT,CAAhC;EACA,OAAO,CAACA,WAAD,EAAcC,cAAd,CAAP;AACH;AAAA;;AAED,SAASC,2BAAT,CAAqCL,KAArC,EAA4CO,GAA5C,EAAiDL,WAAjD,EAA8D;EAAE;EAC5D,OAAOA,WAAW,CAACM,MAAZ,CAAmBC,GAAG,IAAIA,GAAG,CAACF,GAAD,CAAH,CAASG,IAAT,OAAoBV,KAAK,CAACU,IAAN,EAA9C,CAAP;AACH;;AAED,SAASJ,eAAT,CAAyBC,GAAzB,EAA8BL,WAA9B,EAA2C;EAAE;EACzC,IAAIS,QAAQ,GAAG,EAAf;EACAT,WAAW,CAACU,OAAZ,CAAoBH,GAAG,IAAI;IACvB,IAAI,CAACE,QAAQ,CAACE,QAAT,CAAkBJ,GAAG,CAACF,GAAD,CAAH,CAASO,OAAT,EAAlB,CAAL,EAA4C;MACxCH,QAAQ,CAACI,IAAT,CAAcN,GAAG,CAACF,GAAD,CAAH,CAASO,OAAT,EAAd;IACH;EACJ,CAJD;EAKA,OAAOH,QAAP;AACH"},"metadata":{},"sourceType":"module"}