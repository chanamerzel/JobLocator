{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chani\\\\Desktop\\\\\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\MegaFlex2 - Copy\\\\client-side\\\\apartments\\\\src\\\\components\\\\Drop_Down_Area.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { Link, Outlet } from \"react-router-dom\";\nimport '../App.css';\nimport ReactDOM from \"react-dom/client\";\nimport sortJobsDetailsByAreaOrCity from './logic/sort';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Drop_Down_Area(props) {\n  _s();\n\n  const [dropDownArray, setDropDownArray] = useState([]);\n  const [dropDownType, setDropDownType] = useState(\"\");\n\n  function dropDownOnchange(value, dropDownType) {\n    let jobsDetails = JSON.parse(sessionStorage.getItem(\"currentTable\")).response;\n    console.log(\"hyy\");\n    let index = 0;\n    let sortedArray = [];\n    sortedArray = sortJobsDetailsByAreaOrCity(value, \"store_region\", jobsDetails);\n    console.log(\"sortedArray\" + sortedArray.toString());\n    setDropDownArray(sortedArray);\n    props.onChangeFunction(sortedArray);\n    sessionStorage.setItem(\"currentTable\", JSON.stringify({\n      response: sortedArray.flat()\n    }));\n    props.setFunc(\"store_region\", jobsDetails);\n  }\n\n  const defineDropDown = async () => {\n    let sortedArray = [];\n    sortedArray = sortJobsDetailsByAreaOrCity(jobsDetails[0][\"store_region\"], \"store_region\", props.jobsDetails);\n    console.log(\"sortedArray\" + sortedArray.toString());\n    setDropDownArray(sortedArray); // setOnChangeFunction(await props.onChangeFunction)\n\n    setDropDownType(await props.dropDownType);\n  };\n\n  useEffect(() => {\n    console.log(\"dropDownArray \" + dropDownArray);\n    defineDropDown();\n  }, [dropDownArray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"form1\",\n      id: \"form1\",\n      action: \"/action_page.php\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"subject\",\n        id: \"subject\",\n        onChange: e => dropDownOnchange(e.target.value, dropDownType),\n        children: [dropDownArray.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)), console.log(props.dropDownArray)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Drop_Down_Area, \"cJ7xyJ7xNNML1dSpmFtV+gtiLH8=\");\n\n_c = Drop_Down_Area;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drop_Down_Area\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Link","Outlet","ReactDOM","sortJobsDetailsByAreaOrCity","Drop_Down_Area","props","dropDownArray","setDropDownArray","dropDownType","setDropDownType","dropDownOnchange","value","jobsDetails","JSON","parse","sessionStorage","getItem","response","console","log","index","sortedArray","toString","onChangeFunction","setItem","stringify","flat","setFunc","defineDropDown","e","target","map","option"],"sources":["C:/Users/Chani/Desktop/עבודה/MegaFlex2 - Copy/client-side/apartments/src/components/Drop_Down_Area.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link, Outlet } from \"react-router-dom\";\r\nimport '../App.css';\r\nimport ReactDOM from \"react-dom/client\";\r\nimport sortJobsDetailsByAreaOrCity from './logic/sort'\r\nexport default function Drop_Down_Area(props) {\r\n    const [dropDownArray, setDropDownArray] = useState([])\r\n    const [dropDownType, setDropDownType] = useState(\"\")\r\n\r\n    function dropDownOnchange(value, dropDownType) {\r\n        let jobsDetails=JSON.parse(sessionStorage.getItem(\"currentTable\")).response\r\n        console.log(\"hyy\")\r\n        let index = 0;\r\n        let sortedArray = []\r\n        sortedArray = sortJobsDetailsByAreaOrCity(value, \"store_region\", jobsDetails);\r\n        console.log(\"sortedArray\" + sortedArray.toString())\r\n        setDropDownArray(sortedArray)\r\n        props.onChangeFunction(sortedArray)\r\n        sessionStorage.setItem(\"currentTable\", JSON.stringify({ response: sortedArray.flat() }))\r\n        props.setFunc(\"store_region\", jobsDetails)\r\n    }\r\n    const defineDropDown = async () => { \r\n        let sortedArray = []\r\n        sortedArray = sortJobsDetailsByAreaOrCity(jobsDetails[0][\"store_region\"], \"store_region\", props.jobsDetails);\r\n    console.log(\"sortedArray\" + sortedArray.toString())\r\n    setDropDownArray(sortedArray)\r\n        // setOnChangeFunction(await props.onChangeFunction)\r\n        setDropDownType(await props.dropDownType)\r\n    };\r\n    useEffect(() => {\r\nconsole.log(\"dropDownArray \"+dropDownArray)\r\n        defineDropDown();\r\n    }, [dropDownArray]);\r\n    return (\r\n        <div>\r\n            <form name=\"form1\" id=\"form1\" action=\"/action_page.php\">\r\n\r\n                <select name=\"subject\" id=\"subject\" onChange={(e) => dropDownOnchange(e.target.value, dropDownType)}>\r\n                    {\r\n\r\n                        dropDownArray.map((option) => (\r\n                            <option key={option} value={option}>{option}</option>\r\n\r\n                        ))\r\n\r\n                    }\r\n                    {console.log(props.dropDownArray)}\r\n                </select>\r\n            </form>\r\n        </div>);\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,kBAA7B;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,2BAAP,MAAwC,cAAxC;;AACA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAAA;;EAC1C,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;;EAEA,SAASc,gBAAT,CAA0BC,KAA1B,EAAiCH,YAAjC,EAA+C;IAC3C,IAAII,WAAW,GAACC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAAX,EAAmDC,QAAnE;IACAC,OAAO,CAACC,GAAR,CAAY,KAAZ;IACA,IAAIC,KAAK,GAAG,CAAZ;IACA,IAAIC,WAAW,GAAG,EAAlB;IACAA,WAAW,GAAGlB,2BAA2B,CAACQ,KAAD,EAAQ,cAAR,EAAwBC,WAAxB,CAAzC;IACAM,OAAO,CAACC,GAAR,CAAY,gBAAgBE,WAAW,CAACC,QAAZ,EAA5B;IACAf,gBAAgB,CAACc,WAAD,CAAhB;IACAhB,KAAK,CAACkB,gBAAN,CAAuBF,WAAvB;IACAN,cAAc,CAACS,OAAf,CAAuB,cAAvB,EAAuCX,IAAI,CAACY,SAAL,CAAe;MAAER,QAAQ,EAAEI,WAAW,CAACK,IAAZ;IAAZ,CAAf,CAAvC;IACArB,KAAK,CAACsB,OAAN,CAAc,cAAd,EAA8Bf,WAA9B;EACH;;EACD,MAAMgB,cAAc,GAAG,YAAY;IAC/B,IAAIP,WAAW,GAAG,EAAlB;IACAA,WAAW,GAAGlB,2BAA2B,CAACS,WAAW,CAAC,CAAD,CAAX,CAAe,cAAf,CAAD,EAAiC,cAAjC,EAAiDP,KAAK,CAACO,WAAvD,CAAzC;IACJM,OAAO,CAACC,GAAR,CAAY,gBAAgBE,WAAW,CAACC,QAAZ,EAA5B;IACAf,gBAAgB,CAACc,WAAD,CAAhB,CAJmC,CAK/B;;IACAZ,eAAe,CAAC,MAAMJ,KAAK,CAACG,YAAb,CAAf;EACH,CAPD;;EAQAX,SAAS,CAAC,MAAM;IACpBqB,OAAO,CAACC,GAAR,CAAY,mBAAiBb,aAA7B;IACQsB,cAAc;EACjB,CAHQ,EAGN,CAACtB,aAAD,CAHM,CAAT;EAIA,oBACI;IAAA,uBACI;MAAM,IAAI,EAAC,OAAX;MAAmB,EAAE,EAAC,OAAtB;MAA8B,MAAM,EAAC,kBAArC;MAAA,uBAEI;QAAQ,IAAI,EAAC,SAAb;QAAuB,EAAE,EAAC,SAA1B;QAAoC,QAAQ,EAAGuB,CAAD,IAAOnB,gBAAgB,CAACmB,CAAC,CAACC,MAAF,CAASnB,KAAV,EAAiBH,YAAjB,CAArE;QAAA,WAGQF,aAAa,CAACyB,GAAd,CAAmBC,MAAD,iBACd;UAAqB,KAAK,EAAEA,MAA5B;UAAA,UAAqCA;QAArC,GAAaA,MAAb;UAAA;UAAA;UAAA;QAAA,QADJ,CAHR,EASKd,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACC,aAAlB,CATL;MAAA;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;GA7CuBF,c;;KAAAA,c"},"metadata":{},"sourceType":"module"}